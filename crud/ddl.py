


class DDL:

	def  __init__(self, instance_name):
		self.instance_name = instance_name

	def  __str__(self):
		return self.instance_name


	def set_database_connection_object(self, database_connection):
		self.database_connection = database_connection

	def get_DDL(self):
		DDLQueryList = []

		DDLQueryList.append("CREATE DATABASE IF NOT EXISTS public_procurement;")
		DDLQueryList.append("USE public_procurement;")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS table_of_tables( key_column INT(3) AUTO_INCREMENT , entity_name varchar(100) not null, PRIMARY KEY(key_column));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS table_of_columns( key_column INT(3) AUTO_INCREMENT , column_name varchar(100) NOT NULL, entity_name varchar(100) NOT NULL, PRIMARY KEY(key_column));")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS country( country_id  VARCHAR(50) NOT NULL, PRIMARY KEY(country_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS country_code( country_id  VARCHAR(50) NOT NULL, code  VARCHAR(10) NOT NULL, PRIMARY KEY(country_id), CONSTRAINT FKEY_4_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS country_name( country_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(country_id), CONSTRAINT FKEY_5_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS country_currency( country_id  VARCHAR(50) NOT NULL, currency  VARCHAR(100) NOT NULL, PRIMARY KEY(country_id), CONSTRAINT FKEY_6_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS country_flag( country_id  VARCHAR(50) NOT NULL, flag  VARCHAR(255) NOT NULL, PRIMARY KEY(country_id), CONSTRAINT FKEY_7_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS country_coat_of_arms( country_id  VARCHAR(50) NOT NULL, coat_of_arms  VARCHAR(100) NOT NULL, PRIMARY KEY(country_id), CONSTRAINT FKEY_8_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_year( fiscal_year_id  VARCHAR(50) NOT NULL, PRIMARY KEY(fiscal_year_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_year_start_date( fiscal_year_id  VARCHAR(50) NOT NULL, start_date  DATE NOT NULL, PRIMARY KEY(fiscal_year_id), CONSTRAINT FKEY_10_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_year_end_date( fiscal_year_id  VARCHAR(50) NOT NULL, end_date  DATE NOT NULL, PRIMARY KEY(fiscal_year_id), CONSTRAINT FKEY_11_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS configuration( configuration_id  VARCHAR(50) NOT NULL, PRIMARY KEY(configuration_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS configuration_name( configuration_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(configuration_id), CONSTRAINT FKEY_13_0 FOREIGN KEY (configuration_id) REFERENCES configuration(configuration_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS configuration_description( configuration_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(configuration_id), CONSTRAINT FKEY_14_0 FOREIGN KEY (configuration_id) REFERENCES configuration(configuration_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS configuration_value( configuration_id  VARCHAR(50) NOT NULL, value  VARCHAR(255) NOT NULL, PRIMARY KEY(configuration_id), CONSTRAINT FKEY_15_0 FOREIGN KEY (configuration_id) REFERENCES configuration(configuration_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS configuration_status( configuration_id  VARCHAR(50) NOT NULL, status  VARCHAR(30) NOT NULL, PRIMARY KEY(configuration_id), CONSTRAINT FKEY_16_0 FOREIGN KEY (configuration_id) REFERENCES configuration(configuration_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS red_flag( red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(red_flag_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS red_flag_name( red_flag_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(red_flag_id), CONSTRAINT FKEY_18_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS red_flag_description( red_flag_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(red_flag_id), CONSTRAINT FKEY_19_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS red_flag_status( red_flag_id  VARCHAR(50) NOT NULL, status  VARCHAR(30) NOT NULL, PRIMARY KEY(red_flag_id), CONSTRAINT FKEY_20_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS illicit_scheme( illicit_scheme_id  VARCHAR(50) NOT NULL, PRIMARY KEY(illicit_scheme_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS illicit_scheme_name( illicit_scheme_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(illicit_scheme_id), CONSTRAINT FKEY_22_0 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS illicit_scheme_description( illicit_scheme_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(illicit_scheme_id), CONSTRAINT FKEY_23_0 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_stage( procurement_stage_id  VARCHAR(50) NOT NULL, PRIMARY KEY(procurement_stage_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_stage_name( procurement_stage_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(procurement_stage_id), CONSTRAINT FKEY_25_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_stage_description( procurement_stage_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(procurement_stage_id), CONSTRAINT FKEY_26_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS submission( submission_id  VARCHAR(50) NOT NULL, PRIMARY KEY(submission_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS submission_name( submission_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(submission_id), CONSTRAINT FKEY_28_0 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS submission_description( submission_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(submission_id), CONSTRAINT FKEY_29_0 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS submission_reception_date_and_time( submission_id  VARCHAR(50) NOT NULL, reception_date_and_time  TIMESTAMP NOT NULL, PRIMARY KEY(submission_id), CONSTRAINT FKEY_30_0 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS submission_cut_off_date_and_time( submission_id  VARCHAR(50) NOT NULL, cut_off_date_and_time  TIMESTAMP NOT NULL, PRIMARY KEY(submission_id), CONSTRAINT FKEY_31_0 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_type( procurement_type_id  VARCHAR(50) NOT NULL, PRIMARY KEY(procurement_type_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_type_code( procurement_type_id  VARCHAR(50) NOT NULL, code  VARCHAR(10) NOT NULL, PRIMARY KEY(procurement_type_id), CONSTRAINT FKEY_33_0 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_type_name( procurement_type_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(procurement_type_id), CONSTRAINT FKEY_34_0 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_type_description( procurement_type_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(procurement_type_id), CONSTRAINT FKEY_35_0 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_method( procurement_method_id  VARCHAR(50) NOT NULL, PRIMARY KEY(procurement_method_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_method_code( procurement_method_id  VARCHAR(50) NOT NULL, code  VARCHAR(10) NOT NULL, PRIMARY KEY(procurement_method_id), CONSTRAINT FKEY_37_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_method_name( procurement_method_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(procurement_method_id), CONSTRAINT FKEY_38_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_method_description( procurement_method_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(procurement_method_id), CONSTRAINT FKEY_39_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bid( bid_id  VARCHAR(50) NOT NULL, PRIMARY KEY(bid_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bid_submission_date( bid_id  VARCHAR(50) NOT NULL, submission_date  TIMESTAMP NOT NULL, PRIMARY KEY(bid_id), CONSTRAINT FKEY_41_0 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bid_amount( bid_id  VARCHAR(50) NOT NULL, amount  NUMERIC NOT NULL, PRIMARY KEY(bid_id), CONSTRAINT FKEY_42_0 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bid_extra_information( bid_id  VARCHAR(50) NOT NULL, extra_information  VARCHAR(255) NOT NULL, PRIMARY KEY(bid_id), CONSTRAINT FKEY_43_0 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS item( item_id  VARCHAR(50) NOT NULL, PRIMARY KEY(item_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS item_code( item_id  VARCHAR(50) NOT NULL, code  VARCHAR(255) NOT NULL, PRIMARY KEY(item_id), CONSTRAINT FKEY_45_0 FOREIGN KEY (item_id) REFERENCES item(item_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS item_name( item_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(item_id), CONSTRAINT FKEY_46_0 FOREIGN KEY (item_id) REFERENCES item(item_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS item_unit_cost( item_id  VARCHAR(50) NOT NULL, unit_cost  NUMERIC NOT NULL, PRIMARY KEY(item_id), CONSTRAINT FKEY_47_0 FOREIGN KEY (item_id) REFERENCES item(item_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS item_description( item_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(item_id), CONSTRAINT FKEY_48_0 FOREIGN KEY (item_id) REFERENCES item(item_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity( procuring_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(procuring_entity_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity_name( procuring_entity_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(procuring_entity_id), CONSTRAINT FKEY_50_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity_tax_identifier( procuring_entity_id  VARCHAR(50) NOT NULL, tax_identifier  VARCHAR(255) NOT NULL, PRIMARY KEY(procuring_entity_id), CONSTRAINT FKEY_51_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity_tax_identifier_value( procuring_entity_id  VARCHAR(50) NOT NULL, tax_identifier_value  VARCHAR(255) NOT NULL, PRIMARY KEY(procuring_entity_id), CONSTRAINT FKEY_52_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity_registration_number( procuring_entity_id  VARCHAR(50) NOT NULL, registration_number  VARCHAR(100) NOT NULL, PRIMARY KEY(procuring_entity_id), CONSTRAINT FKEY_53_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity_registration_date( procuring_entity_id  VARCHAR(50) NOT NULL, registration_date  TIMESTAMP NOT NULL, PRIMARY KEY(procuring_entity_id), CONSTRAINT FKEY_54_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entity_status( procuring_entity_id  VARCHAR(50) NOT NULL, status  VARCHAR(30) NOT NULL, PRIMARY KEY(procuring_entity_id), CONSTRAINT FKEY_55_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity( supplying_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(supplying_entity_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity_name( supplying_entity_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(supplying_entity_id), CONSTRAINT FKEY_57_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity_tax_identifier( supplying_entity_id  VARCHAR(50) NOT NULL, tax_identifier  VARCHAR(255) NOT NULL, PRIMARY KEY(supplying_entity_id), CONSTRAINT FKEY_58_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity_tax_identifier_value( supplying_entity_id  VARCHAR(50) NOT NULL, tax_identifier_value  VARCHAR(255) NOT NULL, PRIMARY KEY(supplying_entity_id), CONSTRAINT FKEY_59_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity_registration_number( supplying_entity_id  VARCHAR(50) NOT NULL, registration_number  VARCHAR(100) NOT NULL, PRIMARY KEY(supplying_entity_id), CONSTRAINT FKEY_60_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity_registration_date( supplying_entity_id  VARCHAR(50) NOT NULL, registration_date  TIMESTAMP NOT NULL, PRIMARY KEY(supplying_entity_id), CONSTRAINT FKEY_61_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entity_status( supplying_entity_id  VARCHAR(50) NOT NULL, status  VARCHAR(30) NOT NULL, PRIMARY KEY(supplying_entity_id), CONSTRAINT FKEY_62_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address( address_id  VARCHAR(50) NOT NULL, PRIMARY KEY(address_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_country( address_id  VARCHAR(50) NOT NULL, country  VARCHAR(10) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_64_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_1( address_id  VARCHAR(50) NOT NULL, address_line_1  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_65_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_2( address_id  VARCHAR(50) NOT NULL, address_line_2  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_66_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_3( address_id  VARCHAR(50) NOT NULL, address_line_3  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_67_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_4( address_id  VARCHAR(50) NOT NULL, address_line_4  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_68_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_5( address_id  VARCHAR(50) NOT NULL, address_line_5  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_69_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_6( address_id  VARCHAR(50) NOT NULL, address_line_6  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_70_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_7( address_id  VARCHAR(50) NOT NULL, address_line_7  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_71_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_8( address_id  VARCHAR(50) NOT NULL, address_line_8  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_72_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_address_line_9( address_id  VARCHAR(50) NOT NULL, address_line_9  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_73_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_x_coord( address_id  VARCHAR(50) NOT NULL, x_coord  NUMERIC NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_74_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_y_coord( address_id  VARCHAR(50) NOT NULL, y_coord  NUMERIC NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_75_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_status( address_id  VARCHAR(50) NOT NULL, status  VARCHAR(40) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_76_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_description( address_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_77_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS address_short_form( address_id  VARCHAR(50) NOT NULL, short_form  VARCHAR(255) NOT NULL, PRIMARY KEY(address_id), CONSTRAINT FKEY_78_0 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender( tender_id  VARCHAR(50) NOT NULL, PRIMARY KEY(tender_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_title( tender_id  VARCHAR(50) NOT NULL, title  TEXT NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_80_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_description( tender_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_81_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_budget( tender_id  VARCHAR(50) NOT NULL, budget  NUMERIC NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_82_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_status( tender_id  VARCHAR(50) NOT NULL, status  VARCHAR(40) NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_83_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_evaluate_mechanism( tender_id  VARCHAR(50) NOT NULL, evaluate_mechanism  VARCHAR(100) NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_84_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_publication_date_and_time( tender_id  VARCHAR(50) NOT NULL, publication_date_and_time  TIMESTAMP NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_85_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_submission_cut_off_date_and_time( tender_id  VARCHAR(50) NOT NULL, submission_cut_off_date_and_time  TIMESTAMP NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_86_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_award_notice_date( tender_id  VARCHAR(50) NOT NULL, award_notice_date  TIMESTAMP NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_87_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tender_contract_notice_date( tender_id  VARCHAR(50) NOT NULL, contract_notice_date  TIMESTAMP NOT NULL, PRIMARY KEY(tender_id), CONSTRAINT FKEY_88_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS attachment( attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(attachment_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS attachment_type( attachment_id  VARCHAR(50) NOT NULL, type  VARCHAR(30) NOT NULL, PRIMARY KEY(attachment_id), CONSTRAINT FKEY_90_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS attachment_name( attachment_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(attachment_id), CONSTRAINT FKEY_91_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS attachment_description( attachment_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(attachment_id), CONSTRAINT FKEY_92_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS attachment_link( attachment_id  VARCHAR(50) NOT NULL, link  VARCHAR(255) NOT NULL, PRIMARY KEY(attachment_id), CONSTRAINT FKEY_93_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS award( award_id  VARCHAR(50) NOT NULL, PRIMARY KEY(award_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS award_is_accepted( award_id  VARCHAR(50) NOT NULL, is_accepted  INT NOT NULL, PRIMARY KEY(award_id), CONSTRAINT FKEY_95_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS award_date_replied( award_id  VARCHAR(50) NOT NULL, date_replied  DATE NOT NULL, PRIMARY KEY(award_id), CONSTRAINT FKEY_96_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS award_reply_reason( award_id  VARCHAR(50) NOT NULL, reply_reason  TEXT NOT NULL, PRIMARY KEY(award_id), CONSTRAINT FKEY_97_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS award_award_amount( award_id  VARCHAR(50) NOT NULL, award_amount  NUMERIC NOT NULL, PRIMARY KEY(award_id), CONSTRAINT FKEY_98_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contact( contact_id  VARCHAR(50) NOT NULL, PRIMARY KEY(contact_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contact_name( contact_id  VARCHAR(50) NOT NULL, name  VARCHAR(100) NOT NULL, PRIMARY KEY(contact_id), CONSTRAINT FKEY_100_0 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contact_value( contact_id  VARCHAR(50) NOT NULL, value  VARCHAR(255) NOT NULL, PRIMARY KEY(contact_id), CONSTRAINT FKEY_101_0 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contact_status( contact_id  VARCHAR(50) NOT NULL, status  VARCHAR(50) NOT NULL, PRIMARY KEY(contact_id), CONSTRAINT FKEY_102_0 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contract( contract_id  VARCHAR(50) NOT NULL, PRIMARY KEY(contract_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contract_title( contract_id  VARCHAR(50) NOT NULL, title  TEXT NOT NULL, PRIMARY KEY(contract_id), CONSTRAINT FKEY_104_0 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contract_amount( contract_id  VARCHAR(50) NOT NULL, amount  NUMERIC NOT NULL, PRIMARY KEY(contract_id), CONSTRAINT FKEY_105_0 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contract_status( contract_id  VARCHAR(50) NOT NULL, status  VARCHAR(50) NOT NULL, PRIMARY KEY(contract_id), CONSTRAINT FKEY_106_0 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contract_description( contract_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(contract_id), CONSTRAINT FKEY_107_0 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fee( fee_id  VARCHAR(50) NOT NULL, PRIMARY KEY(fee_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fee_name( fee_id  VARCHAR(50) NOT NULL, name  VARCHAR(100) NOT NULL, PRIMARY KEY(fee_id), CONSTRAINT FKEY_109_0 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fee_amount( fee_id  VARCHAR(50) NOT NULL, amount  NUMERIC NOT NULL, PRIMARY KEY(fee_id), CONSTRAINT FKEY_110_0 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fee_type( fee_id  VARCHAR(50) NOT NULL, type  VARCHAR(100) NOT NULL, PRIMARY KEY(fee_id), CONSTRAINT FKEY_111_0 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment( payment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(payment_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment_transaction_id( payment_id  VARCHAR(50) NOT NULL, transaction_id  VARCHAR(255) NOT NULL, PRIMARY KEY(payment_id), CONSTRAINT FKEY_113_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment_date_received( payment_id  VARCHAR(50) NOT NULL, date_received  TIMESTAMP NOT NULL, PRIMARY KEY(payment_id), CONSTRAINT FKEY_114_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment_amount( payment_id  VARCHAR(50) NOT NULL, amount  NUMERIC NOT NULL, PRIMARY KEY(payment_id), CONSTRAINT FKEY_115_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment_currency( payment_id  VARCHAR(50) NOT NULL, currency  VARCHAR(100) NOT NULL, PRIMARY KEY(payment_id), CONSTRAINT FKEY_116_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment_status( payment_id  VARCHAR(50) NOT NULL, status  VARCHAR(30) NOT NULL, PRIMARY KEY(payment_id), CONSTRAINT FKEY_117_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS payment_extra_information( payment_id  VARCHAR(50) NOT NULL, extra_information  TEXT NOT NULL, PRIMARY KEY(payment_id), CONSTRAINT FKEY_118_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS plan( plan_id  VARCHAR(50) NOT NULL, PRIMARY KEY(plan_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS plan_budget( plan_id  VARCHAR(50) NOT NULL, budget  NUMERIC NOT NULL, PRIMARY KEY(plan_id), CONSTRAINT FKEY_120_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS plan_submission_date_and_time( plan_id  VARCHAR(50) NOT NULL, submission_date_and_time  TIMESTAMP NOT NULL, PRIMARY KEY(plan_id), CONSTRAINT FKEY_121_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS plan_description( plan_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(plan_id), CONSTRAINT FKEY_122_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert( alert_id  VARCHAR(50) NOT NULL, PRIMARY KEY(alert_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_subject( alert_id  VARCHAR(50) NOT NULL, subject  VARCHAR(255) NOT NULL, PRIMARY KEY(alert_id), CONSTRAINT FKEY_124_0 FOREIGN KEY (alert_id) REFERENCES alert(alert_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_description( alert_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(alert_id), CONSTRAINT FKEY_125_0 FOREIGN KEY (alert_id) REFERENCES alert(alert_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authority( alert_authority_id  VARCHAR(50) NOT NULL, PRIMARY KEY(alert_authority_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authority_name( alert_authority_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(alert_authority_id), CONSTRAINT FKEY_127_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authority_description( alert_authority_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(alert_authority_id), CONSTRAINT FKEY_128_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_level( alert_level_id  VARCHAR(50) NOT NULL, PRIMARY KEY(alert_level_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_level_name( alert_level_id  VARCHAR(50) NOT NULL, name  VARCHAR(255) NOT NULL, PRIMARY KEY(alert_level_id), CONSTRAINT FKEY_130_0 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_level_description( alert_level_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(alert_level_id), CONSTRAINT FKEY_131_0 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account( user_account_id  VARCHAR(50) NOT NULL, PRIMARY KEY(user_account_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_national_id_number( user_account_id  VARCHAR(50) NOT NULL, national_id_number  VARCHAR(50) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_133_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_category( user_account_id  VARCHAR(50) NOT NULL, category  VARCHAR(70) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_134_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_first_name( user_account_id  VARCHAR(50) NOT NULL, first_name  VARCHAR(70) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_135_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_last_name( user_account_id  VARCHAR(50) NOT NULL, last_name  VARCHAR(70) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_136_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_other_names( user_account_id  VARCHAR(50) NOT NULL, other_names  VARCHAR(70) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_137_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_date_of_birth( user_account_id  VARCHAR(50) NOT NULL, date_of_birth  DATE NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_138_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_gender( user_account_id  VARCHAR(50) NOT NULL, gender  VARCHAR(12) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_139_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_status( user_account_id  VARCHAR(50) NOT NULL, status  VARCHAR(40) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_140_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_email( user_account_id  VARCHAR(50) NOT NULL, email  VARCHAR(255) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_141_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_password( user_account_id  VARCHAR(50) NOT NULL, password  VARCHAR(255) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_142_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_account_photo( user_account_id  VARCHAR(50) NOT NULL, photo  VARCHAR(255) NOT NULL, PRIMARY KEY(user_account_id), CONSTRAINT FKEY_143_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS appeal( appeal_id  VARCHAR(50) NOT NULL, PRIMARY KEY(appeal_id));")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS appeal_subject( appeal_id  VARCHAR(50) NOT NULL, subject  VARCHAR(255) NOT NULL, PRIMARY KEY(appeal_id), CONSTRAINT FKEY_145_0 FOREIGN KEY (appeal_id) REFERENCES appeal(appeal_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS appeal_description( appeal_id  VARCHAR(50) NOT NULL, description  TEXT NOT NULL, PRIMARY KEY(appeal_id), CONSTRAINT FKEY_146_0 FOREIGN KEY (appeal_id) REFERENCES appeal(appeal_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryfiscal_yearmap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, fiscal_year_id), CONSTRAINT FKEY_147_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_147_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryprocurement_stagemap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, procurement_stage_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, procurement_stage_id), CONSTRAINT FKEY_150_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_150_1 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryprocurement_typemap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, procurement_type_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, procurement_type_id), CONSTRAINT FKEY_152_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_152_1 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryprocurement_methodmap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, procurement_method_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, procurement_method_id), CONSTRAINT FKEY_154_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_154_1 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryprocuring_entitymap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, procuring_entity_id), CONSTRAINT FKEY_156_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_156_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countrysupplying_entitymap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, supplying_entity_id), CONSTRAINT FKEY_158_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_158_1 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, red_flag_id), CONSTRAINT FKEY_160_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_160_1 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS countryillicit_schememap( key_column TIMESTAMP NOT NULL NOT NULL, country_id  VARCHAR(50) NOT NULL, illicit_scheme_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, country_id, illicit_scheme_id), CONSTRAINT FKEY_162_0 FOREIGN KEY (country_id) REFERENCES country(country_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_162_1 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yeartendermap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, tender_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, tender_id), CONSTRAINT FKEY_164_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_164_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearillicit_schememap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, illicit_scheme_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, illicit_scheme_id), CONSTRAINT FKEY_166_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_166_1 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, red_flag_id), CONSTRAINT FKEY_167_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_167_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearprocurement_stagemap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, procurement_stage_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, procurement_stage_id), CONSTRAINT FKEY_168_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_168_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearprocurement_typemap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, procurement_type_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, procurement_type_id), CONSTRAINT FKEY_169_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_169_1 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearprocurement_methodmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, procurement_method_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, procurement_method_id), CONSTRAINT FKEY_170_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_170_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearbidmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, bid_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, bid_id), CONSTRAINT FKEY_171_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_171_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearitemmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, item_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, item_id), CONSTRAINT FKEY_173_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_173_1 FOREIGN KEY (item_id) REFERENCES item(item_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearcontractmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, contract_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, contract_id), CONSTRAINT FKEY_175_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_175_1 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearconfigurationmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, configuration_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, configuration_id), CONSTRAINT FKEY_177_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_177_1 FOREIGN KEY (configuration_id) REFERENCES configuration(configuration_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearfeemap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, fee_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, fee_id), CONSTRAINT FKEY_179_0 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_179_1 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearprocuring_entitymap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, procuring_entity_id), CONSTRAINT FKEY_181_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_181_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearsupplying_entitymap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, supplying_entity_id), CONSTRAINT FKEY_182_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_182_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearawardmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, award_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, award_id), CONSTRAINT FKEY_183_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_183_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS fiscal_yearplanmap( key_column TIMESTAMP NOT NULL NOT NULL, fiscal_year_id  VARCHAR(50) NOT NULL, plan_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, fiscal_year_id, plan_id), CONSTRAINT FKEY_185_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_185_1 FOREIGN KEY (fiscal_year_id) REFERENCES fiscal_year(fiscal_year_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS red_flagconfigurationmap( key_column TIMESTAMP NOT NULL NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, configuration_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, red_flag_id, configuration_id), CONSTRAINT FKEY_187_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_187_1 FOREIGN KEY (configuration_id) REFERENCES configuration(configuration_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_stagered_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, procurement_stage_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procurement_stage_id, red_flag_id), CONSTRAINT FKEY_188_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_188_1 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, red_flag_id), CONSTRAINT FKEY_189_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_189_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, red_flag_id), CONSTRAINT FKEY_190_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_190_1 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_typered_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, procurement_type_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procurement_type_id, red_flag_id), CONSTRAINT FKEY_191_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_191_1 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_methodred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, procurement_method_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procurement_method_id, red_flag_id), CONSTRAINT FKEY_192_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_192_1 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tenderred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, tender_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, tender_id, red_flag_id), CONSTRAINT FKEY_193_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_193_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bidred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, bid_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, bid_id, red_flag_id), CONSTRAINT FKEY_194_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_194_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS itemred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, item_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, item_id, red_flag_id), CONSTRAINT FKEY_195_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_195_1 FOREIGN KEY (item_id) REFERENCES item(item_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contractred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, contract_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, contract_id, red_flag_id), CONSTRAINT FKEY_196_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_196_1 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS illicit_schemered_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, illicit_scheme_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, illicit_scheme_id, red_flag_id), CONSTRAINT FKEY_197_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_197_1 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bidfeemap( key_column TIMESTAMP NOT NULL NOT NULL, bid_id  VARCHAR(50) NOT NULL, fee_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, bid_id, fee_id), CONSTRAINT FKEY_198_0 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_198_1 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bidpaymentmap( key_column TIMESTAMP NOT NULL NOT NULL, bid_id  VARCHAR(50) NOT NULL, payment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, bid_id, payment_id), CONSTRAINT FKEY_199_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_199_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bidawardmap( key_column TIMESTAMP NOT NULL NOT NULL, bid_id  VARCHAR(50) NOT NULL, award_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, bid_id, award_id), CONSTRAINT FKEY_201_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_201_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tenderbidmap( key_column TIMESTAMP NOT NULL NOT NULL, tender_id  VARCHAR(50) NOT NULL, bid_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, tender_id, bid_id), CONSTRAINT FKEY_202_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_202_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tenderfeemap( key_column TIMESTAMP NOT NULL NOT NULL, tender_id  VARCHAR(50) NOT NULL, fee_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, tender_id, fee_id), CONSTRAINT FKEY_203_0 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_203_1 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tenderpaymentmap( key_column TIMESTAMP NOT NULL NOT NULL, tender_id  VARCHAR(50) NOT NULL, payment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, tender_id, payment_id), CONSTRAINT FKEY_204_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_204_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS awardappealmap( key_column TIMESTAMP NOT NULL NOT NULL, award_id  VARCHAR(50) NOT NULL, appeal_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, award_id, appeal_id), CONSTRAINT FKEY_205_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_205_1 FOREIGN KEY (appeal_id) REFERENCES appeal(appeal_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityprocurement_typemap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, procurement_type_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, procurement_type_id), CONSTRAINT FKEY_207_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_207_1 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityprocurement_methodmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, procurement_method_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, procurement_method_id), CONSTRAINT FKEY_208_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_208_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityprocurement_stagemap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, procurement_stage_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, procurement_stage_id), CONSTRAINT FKEY_209_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_209_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entitybidmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, bid_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, bid_id), CONSTRAINT FKEY_210_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_210_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entitytendermap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, tender_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, tender_id), CONSTRAINT FKEY_211_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_211_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entitycontractmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, contract_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, contract_id), CONSTRAINT FKEY_212_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_212_1 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityillicit_schememap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, illicit_scheme_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, illicit_scheme_id), CONSTRAINT FKEY_213_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_213_1 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityaddressmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, address_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, address_id), CONSTRAINT FKEY_214_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_214_1 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityattachmentmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, attachment_id), CONSTRAINT FKEY_216_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_216_1 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityplanmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, plan_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, plan_id), CONSTRAINT FKEY_218_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_218_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityawardmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, award_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, award_id), CONSTRAINT FKEY_219_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_219_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entitycontactmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, contact_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, contact_id), CONSTRAINT FKEY_220_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_220_1 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entitypaymentmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, payment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, payment_id), CONSTRAINT FKEY_222_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_222_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entityuser_accountmap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, user_account_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, user_account_id), CONSTRAINT FKEY_223_0 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_223_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procuring_entitysupplying_entitymap( key_column TIMESTAMP NOT NULL NOT NULL, procuring_entity_id  VARCHAR(50) NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procuring_entity_id, supplying_entity_id), CONSTRAINT FKEY_225_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_225_1 FOREIGN KEY (procuring_entity_id) REFERENCES procuring_entity(procuring_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityprocurement_typemap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, procurement_type_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, procurement_type_id), CONSTRAINT FKEY_226_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_226_1 FOREIGN KEY (procurement_type_id) REFERENCES procurement_type(procurement_type_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityprocurement_methodmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, procurement_method_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, procurement_method_id), CONSTRAINT FKEY_227_0 FOREIGN KEY (procurement_method_id) REFERENCES procurement_method(procurement_method_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_227_1 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityprocurement_stagemap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, procurement_stage_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, procurement_stage_id), CONSTRAINT FKEY_228_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_228_1 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entitybidmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, bid_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, bid_id), CONSTRAINT FKEY_229_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_229_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entitytendermap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, tender_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, tender_id), CONSTRAINT FKEY_230_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_230_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entitycontractmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, contract_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, contract_id), CONSTRAINT FKEY_231_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_231_1 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityillicit_schememap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, illicit_scheme_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, illicit_scheme_id), CONSTRAINT FKEY_232_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_232_1 FOREIGN KEY (illicit_scheme_id) REFERENCES illicit_scheme(illicit_scheme_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityaddressmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, address_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, address_id), CONSTRAINT FKEY_233_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_233_1 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityattachmentmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, attachment_id), CONSTRAINT FKEY_234_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_234_1 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityawardmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, award_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, award_id), CONSTRAINT FKEY_235_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_235_1 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entitycontactmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, contact_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, contact_id), CONSTRAINT FKEY_236_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_236_1 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entitypaymentmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, payment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, payment_id), CONSTRAINT FKEY_237_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_237_1 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS supplying_entityuser_accountmap( key_column TIMESTAMP NOT NULL NOT NULL, supplying_entity_id  VARCHAR(50) NOT NULL, user_account_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, supplying_entity_id, user_account_id), CONSTRAINT FKEY_238_0 FOREIGN KEY (supplying_entity_id) REFERENCES supplying_entity(supplying_entity_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_238_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS contractawardmap( key_column TIMESTAMP NOT NULL NOT NULL, contract_id  VARCHAR(50) NOT NULL, award_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, contract_id, award_id), CONSTRAINT FKEY_239_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_239_1 FOREIGN KEY (contract_id) REFERENCES contract(contract_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS paymentfeemap( key_column TIMESTAMP NOT NULL NOT NULL, payment_id  VARCHAR(50) NOT NULL, fee_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, payment_id, fee_id), CONSTRAINT FKEY_240_0 FOREIGN KEY (payment_id) REFERENCES payment(payment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_240_1 FOREIGN KEY (fee_id) REFERENCES fee(fee_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authorityuser_accountmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_authority_id  VARCHAR(50) NOT NULL, user_account_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_authority_id, user_account_id), CONSTRAINT FKEY_241_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_241_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authorityalert_levelmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_authority_id  VARCHAR(50) NOT NULL, alert_level_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_authority_id, alert_level_id), CONSTRAINT FKEY_243_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_243_1 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authorityalertmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_authority_id  VARCHAR(50) NOT NULL, alert_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_authority_id, alert_id), CONSTRAINT FKEY_245_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_245_1 FOREIGN KEY (alert_id) REFERENCES alert(alert_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authorityaddressmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_authority_id  VARCHAR(50) NOT NULL, address_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_authority_id, address_id), CONSTRAINT FKEY_247_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_247_1 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_leveluser_accountmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_level_id  VARCHAR(50) NOT NULL, user_account_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_level_id, user_account_id), CONSTRAINT FKEY_248_0 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_248_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_levelred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_level_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_level_id, red_flag_id), CONSTRAINT FKEY_249_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_249_1 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_leveladdressmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_level_id  VARCHAR(50) NOT NULL, address_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_level_id, address_id), CONSTRAINT FKEY_250_0 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_250_1 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alertred_flagmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_id  VARCHAR(50) NOT NULL, red_flag_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_id, red_flag_id), CONSTRAINT FKEY_251_0 FOREIGN KEY (red_flag_id) REFERENCES red_flag(red_flag_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_251_1 FOREIGN KEY (alert_id) REFERENCES alert(alert_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alertattachmentmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_id  VARCHAR(50) NOT NULL, attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_id, attachment_id), CONSTRAINT FKEY_252_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_252_1 FOREIGN KEY (alert_id) REFERENCES alert(alert_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_authoritycontactmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_authority_id  VARCHAR(50) NOT NULL, contact_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_authority_id, contact_id), CONSTRAINT FKEY_253_0 FOREIGN KEY (alert_authority_id) REFERENCES alert_authority(alert_authority_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_253_1 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS alert_levelcontactmap( key_column TIMESTAMP NOT NULL NOT NULL, alert_level_id  VARCHAR(50) NOT NULL, contact_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, alert_level_id, contact_id), CONSTRAINT FKEY_254_0 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_254_1 FOREIGN KEY (alert_level_id) REFERENCES alert_level(alert_level_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_accountcontactmap( key_column TIMESTAMP NOT NULL NOT NULL, user_account_id  VARCHAR(50) NOT NULL, contact_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, user_account_id, contact_id), CONSTRAINT FKEY_255_0 FOREIGN KEY (contact_id) REFERENCES contact(contact_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_255_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_accountaddressmap( key_column TIMESTAMP NOT NULL NOT NULL, user_account_id  VARCHAR(50) NOT NULL, address_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, user_account_id, address_id), CONSTRAINT FKEY_256_0 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_256_1 FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE CASCADE);")
		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_accountsubmissionmap( key_column TIMESTAMP NOT NULL NOT NULL, user_account_id  VARCHAR(50) NOT NULL, submission_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, user_account_id, submission_id), CONSTRAINT FKEY_257_0 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_257_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS procurement_stagesubmissionmap( key_column TIMESTAMP NOT NULL NOT NULL, procurement_stage_id  VARCHAR(50) NOT NULL, submission_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, procurement_stage_id, submission_id), CONSTRAINT FKEY_259_0 FOREIGN KEY (procurement_stage_id) REFERENCES procurement_stage(procurement_stage_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_259_1 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS plansubmissionmap( key_column TIMESTAMP NOT NULL NOT NULL, plan_id  VARCHAR(50) NOT NULL, submission_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, plan_id, submission_id), CONSTRAINT FKEY_260_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_260_1 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS submissionattachmentmap( key_column TIMESTAMP NOT NULL NOT NULL, submission_id  VARCHAR(50) NOT NULL, attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, submission_id, attachment_id), CONSTRAINT FKEY_261_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_261_1 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS appealattachmentmap( key_column TIMESTAMP NOT NULL NOT NULL, appeal_id  VARCHAR(50) NOT NULL, attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, appeal_id, attachment_id), CONSTRAINT FKEY_262_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_262_1 FOREIGN KEY (appeal_id) REFERENCES appeal(appeal_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_accountattachmentmap( key_column TIMESTAMP NOT NULL NOT NULL, user_account_id  VARCHAR(50) NOT NULL, attachment_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, user_account_id, attachment_id), CONSTRAINT FKEY_263_0 FOREIGN KEY (attachment_id) REFERENCES attachment(attachment_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_263_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS awardsubmissionmap( key_column TIMESTAMP NOT NULL NOT NULL, award_id  VARCHAR(50) NOT NULL, submission_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, award_id, submission_id), CONSTRAINT FKEY_264_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_264_1 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS user_accountplanmap( key_column TIMESTAMP NOT NULL NOT NULL, user_account_id  VARCHAR(50) NOT NULL, plan_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, user_account_id, plan_id), CONSTRAINT FKEY_265_0 FOREIGN KEY (plan_id) REFERENCES plan(plan_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_265_1 FOREIGN KEY (user_account_id) REFERENCES user_account(user_account_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS awardtendermap( key_column TIMESTAMP NOT NULL NOT NULL, award_id  VARCHAR(50) NOT NULL, tender_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, award_id, tender_id), CONSTRAINT FKEY_266_0 FOREIGN KEY (award_id) REFERENCES award(award_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_266_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS bidsubmissionmap( key_column TIMESTAMP NOT NULL NOT NULL, bid_id  VARCHAR(50) NOT NULL, submission_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, bid_id, submission_id), CONSTRAINT FKEY_267_0 FOREIGN KEY (submission_id) REFERENCES submission(submission_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_267_1 FOREIGN KEY (bid_id) REFERENCES bid(bid_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		DDLQueryList.append("CREATE TABLE IF NOT EXISTS tenderappealmap( key_column TIMESTAMP NOT NULL NOT NULL, tender_id  VARCHAR(50) NOT NULL, appeal_id  VARCHAR(50) NOT NULL, PRIMARY KEY(key_column, tender_id, appeal_id), CONSTRAINT FKEY_268_0 FOREIGN KEY (appeal_id) REFERENCES appeal(appeal_id) ON UPDATE CASCADE ON DELETE CASCADE,  CONSTRAINT FKEY_268_1 FOREIGN KEY (tender_id) REFERENCES tender(tender_id) ON UPDATE CASCADE ON DELETE CASCADE);")

		return DDLQueryList




	def generate_DDL(self):
		connection = self.database_connection
		connection_cursor = connection.cursor()
		DDLQueryList = self.get_DDL()
		for i in range(0, len(DDLQueryList)):
			connection_cursor.execute(DDLQueryList[i])
